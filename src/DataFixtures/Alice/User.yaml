parameters:
    password: 'local' # Use for local development
    role_candidate: '<(App\Entity\User::ROLE_CANDIDATE)>'
    role_api: '<(App\Entity\User::ROLE_API)>'
    role_editor: '<(App\Entity\User::ROLE_EDITOR)>'
    role_admin: '<(App\Entity\User::ROLE_ADMIN)>'

App\Entity\User:
    user (template):
        username: '<username()>'
        email: '<safeEmail()>'
        plainPassword: '<{password}>'
        roles: ['<{role_candidate}>']
        enabled: 1
    user_set (template, extends user):
        username: '<current()>'
        email: '<current()>@<safeEmailDomain()>'

    # Admin
    user_{admin} (extends user_set):
        roles: ['<{role_admin}>']

    # Editor (1 set user + 5 randoms)
    user_editor_{editor} (extends user_set):
        roles: ['<{role_editor}>']
    user_editor_{1..5} (extends user):
        roles: ['<{role_editor}>']
        enabled: <boolean(90)>

    # Api User (1 set user + 3 randoms)
    user_api_{some_api_user} (extends user_set):
        roles: ['<{role_api}>']
    user_api_{1..3} (extends user):
        roles: ['<{role_api}>']

    # Candidate (1 set user + 10 randoms)
    user_candidate_{user} (extends user_set):
        roles: ['<{role_candidate}>']
    user_candidate_{1..10} (extends user):
        roles: <randomElements(['ROLE_EDITOR', 'ROLE_API_ACCESS', 'ROLE_USER'], 2)>
        enabled: <boolean(75)>
