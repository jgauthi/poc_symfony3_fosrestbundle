services:
  platform.service.antispam:
    class: PlatformBundle\Service\Antispam
    arguments:
      - "@mailer"
      - 50
    calls:
      - [ setLocale, [%locale%] ]

  platform.twig.antispam_extension:
    class: PlatformBundle\Twig\AntispamExtension
    arguments:
      - "@platform.service.antispam"
    tags:
      - { name: twig.runtime }

  platform.service.bigbrother.message_notificator:
    class: PlatformBundle\Service\Bigbrother\MessageNotificator
    arguments:
      - "@mailer"

  platform.service.bigbrother.message_listener:
    class: PlatformBundle\Service\Bigbrother\MessageListener
    arguments:
      - "@platform.service.bigbrother.message_notificator"
      - ["john", "alexandre", "pierre"]
    tags:
      - { name: kernel.event_listener, event: platform.post_message, method: processMessage }

  platform.form.ckeditor:
    class: PlatformBundle\Form\CkeditorType
    tags:
      - { name: form.type, alias: ckeditor }

  platform.service.beta.html_adder:
    class: PlatformBundle\Service\Beta\BetaHTMLAdder

  platform.service.beta.listener:
    class: PlatformBundle\Service\Beta\BetaListener
    arguments:
      - "@platform.service.beta.html_adder"
      - "2018-07-01"
    tags:
      - { name: kernel.event_listener, event: kernel.response, method: processBeta, priority: 2 }

  platform.service.customparamconverter.json:
    class: PlatformBundle\Service\CustomParamConverter\JsonParamConverter
    tags:
      - { name: request.param_converter }

  platform.service.markdown_transformer:
    class: PlatformBundle\Service\MarkdownTransformer
    arguments: [ '@markdown.parser', '@doctrine_cache.providers.my_markdown_cache' ]
    autowire: true
    public: true

  platform.twig.markdown_extension:
    class: PlatformBundle\Twig\MarkdownExtension
    # arguments: ['@platform.service.markdown_transformer'] # Not require with autowire
    autowire: true
    tags:
      - { name: twig.extension }

  # ALIAS class
  PlatformBundle\Service\MarkdownTransformer: '@platform.service.markdown_transformer'


  # Emplacement sp√©cifique pour des datafixtures
  # sinon, le chemin officiel pour stocker est src/DataFixtures/
  PlatformBundle\DataFixtures\ORM\LoadCategory:
    tags: ['doctrine.fixture.orm']

  PlatformBundle\DataFixtures\ORM\LoadSkill:
    tags: ['doctrine.fixture.orm']

  PlatformBundle\DataFixtures\ORM\LoadAdvert:
    tags: ['doctrine.fixture.orm']

#    platform.example:
#        class: PlatformBundle\Example
#        arguments: ["@service_id", "plain_value", "%parameter%"]

  platform.service.application_mailer:
    class: PlatformBundle\Service\ApplicationMailer
    arguments:
        - "@mailer"

  platform.doctrine_listener.application_creation:
    class: PlatformBundle\DoctrineListener\ApplicationCreationListener
    arguments:
      - "@platform.service.application_mailer"
    tags:
      - { name: doctrine.event_listener, event: postPersist }

  platform.validator.antiflood:
    class: PlatformBundle\Validator\AntifloodValidator
    arguments: ["@request_stack", "@doctrine.orm.entity_manager"]
    tags:
      - { name: validator.constraint_validator, alias: platform_antiflood }
